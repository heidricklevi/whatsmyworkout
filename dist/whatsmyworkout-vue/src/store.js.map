{"version":3,"sources":["../../../whatsmyworkout-vue/src/store.js"],"names":["use","Store","state","userAuth","isAuthenticated","user","data","muscleHistoryGraphLabels","muscleHistoryGraphData","recentTargetedMuscleExercises","targetMuscle","dialog","loading","accountSettingsDialog","accountSettings","receiveWorkoutNotifications","receiveWorkoutsFromFriends","userDashboard","friends","receivedFriendRequests","sentFriendRequests","recentWorkouts","friendsCount","friendProfile","addNewExerciseToggle","toCopyWorkout","toCopyExercises","mutations","setRecentWorkouts","payload","console","log","setReceiveWorkoutsFromFriends","setReceiveWorkoutNotifications","setNewExerciseToggle","setAccountSettingsDialog","setLoading","setDialog","setToCopyExercises","setToCopyWorkout","setSentFriendRequests","setReceivedFriendRequests","setFriendCount","setFriends","setTargetedMuscleData","created","format","target_muscle","setGraphData","reverse","setGraphLabels","setData","storeUserData","setUserAuth","authPayload","defaults","headers","common","removeAuth","localStorage","removeItem","push","path","actions","login","credentials","commit","post","then","response","JWT","token","setItem","catch","errors","newUser","userDataPayload","err","fetchUserProfile","username","get","logout","fetchGraphData","queryVal","temp","tempData","exercise_name","results","length","i","weight","getters"],"mappings":"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","file":"store.js","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\nimport { getJWTHeader, authenticationStatus, getUsernameFromToken, baseURLLocal } from \"./auth/auth-utils\";\r\nimport router from './router/index'\r\nimport moment from 'moment'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nVue.use(Vuex);\r\n\r\n\r\n\r\n//TODO break down into vuex modules\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        userAuth: {\r\n            isAuthenticated: authenticationStatus(),\r\n            user: {\r\n\r\n            }\r\n        },\r\n        data: {},\r\n        muscleHistoryGraphLabels: null,\r\n        muscleHistoryGraphData: null,\r\n        recentTargetedMuscleExercises: null,\r\n        targetMuscle: '',\r\n        dialog: false,\r\n        loading: false,\r\n        accountSettingsDialog: false,\r\n\r\n        accountSettings: {\r\n            receiveWorkoutNotifications: null,\r\n            receiveWorkoutsFromFriends: null,\r\n\r\n\r\n        },\r\n\r\n        userDashboard: {\r\n            friends: [],\r\n            receivedFriendRequests: null,\r\n            sentFriendRequests: null,\r\n            recentWorkouts: [],\r\n            friendsCount: null,\r\n\r\n        },\r\n        friendProfile: {\r\n            addNewExerciseToggle: false,\r\n            toCopyWorkout: {},\r\n            toCopyExercises: [],\r\n        }\r\n    },\r\n    mutations: {\r\n\r\n      setRecentWorkouts (state, payload) {\r\n        console.log(payload);\r\n\r\n        state.userDashboard.recentWorkouts = payload;\r\n      },\r\n\r\n      setReceiveWorkoutsFromFriends (state, payload) {\r\n        state.accountSettings.receiveWorkoutsFromFriends = payload;\r\n      },\r\n\r\n      setReceiveWorkoutNotifications (state, payload) {\r\n\r\n          state.accountSettings.receiveWorkoutNotifications = payload;\r\n      },\r\n\r\n      setNewExerciseToggle (state, payload) {\r\n        state.friendProfile.addNewExerciseToggle = payload;\r\n      },\r\n\r\n      setAccountSettingsDialog (state, payload) {\r\n        state.accountSettingsDialog = payload;\r\n      },\r\n\r\n      setLoading (state, payload) {\r\n        state.loading = payload;\r\n      },\r\n      setDialog (state, payload) {\r\n        state.dialog = payload;\r\n      },\r\n\r\n      setToCopyExercises (state, payload) {\r\n        state.friendProfile.toCopyExercises = payload;\r\n      },\r\n\r\n      setToCopyWorkout (state, payload) {\r\n        state.friendProfile.toCopyWorkout = payload;\r\n      },\r\n\r\n      setSentFriendRequests (state, payload) {\r\n        state.userDashboard.sentFriendRequests = payload;\r\n      },\r\n\r\n      setReceivedFriendRequests (state, payload) {\r\n        state.userDashboard.receivedFriendRequests = payload;\r\n      },\r\n\r\n      setFriendCount (state, payload) {\r\n         state.userDashboard.friendsCount = payload;\r\n      },\r\n\r\n      setFriends (state, payload) {\r\n        state.userDashboard.friends = payload;\r\n      },\r\n      setTargetedMuscleData (state, payload) {\r\n\r\n          if (payload){\r\n              state.recentTargetedMuscleExercises = payload;\r\n              state.recentTargetedMuscleExercises[0].created = moment(payload[0].created).format(\"MMM Do YY, h:m a\");\r\n              state.targetMuscle = payload[0].target_muscle;\r\n            }\r\n          else {\r\n              state.recentTargetedMuscleExercises = null;\r\n          }\r\n      },\r\n      setGraphData (state, payload) {\r\n\r\n        if (payload) {\r\n            state.muscleHistoryGraphData = payload.reverse();\r\n            console.log(\"Graph Data Payload\", payload)\r\n          }\r\n        else {\r\n            state.muscleHistoryGraphData = null;\r\n        }\r\n      },\r\n\r\n      setGraphLabels (state, payload) {\r\n          if (payload) {\r\n              state.muscleHistoryGraphLabels = payload.reverse();\r\n              console.log(\"Graph Label Payload\", payload);\r\n            }\r\n          else {\r\n            state.muscleHistoryGraphLabels = null;\r\n          }\r\n      },\r\n      setData (state, payload) {\r\n          state.data = payload;\r\n      },\r\n      storeUserData (state, payload) {\r\n          state.userAuth.user = payload;\r\n      },\r\n      setUserAuth (state, authPayload) {\r\n          //send jwt on every request\r\n          axios.defaults.headers.common['Authorization'] = getJWTHeader();\r\n          state.userAuth.isAuthenticated = true;\r\n          state.userAuth.user = authPayload;\r\n\r\n      },\r\n      removeAuth (state) {\r\n          state.userAuth.isAuthenticated = false;\r\n          state.userAuth.user = null;\r\n          localStorage.removeItem('JWT');\r\n\r\n          router.push({path: '/'});\r\n      }\r\n    },\r\n    actions: {\r\n        login ({commit}, credentials) {\r\n            axios.post(baseURLLocal+'v1/login/', credentials\r\n            ).then(function (response) {\r\n                let JWT = response.data.token;\r\n                localStorage.setItem(\"JWT\", JWT);\r\n                console.log('logging in via store');\r\n\r\n                commit('setUserAuth', response.data.user);\r\n\r\n            }).catch(function (errors) {\r\n                console.log(errors);\r\n            })\r\n\r\n\r\n        },\r\n        newUser ({commit}, userDataPayload) {\r\n            axios.post(baseURLLocal+'v1/user/create/', userDataPayload\r\n            ).then(function (response) {\r\n                console.log('success');\r\n                console.log(response);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n            })\r\n        },\r\n\r\n        fetchUserProfile ({commit}) {\r\n\r\n            let username = getUsernameFromToken();\r\n            if (!username || !this.state.userAuth.isAuthenticated) return;\r\n            \r\n            axios.defaults.headers.common['Authorization'] = getJWTHeader();\r\n\r\n            axios.get(baseURLLocal+\"v1/users/\" + username +'/')\r\n                .then(function (response) {\r\n                    console.log(\"Fetching from store\", response);\r\n                    commit('storeUserData', response.data);\r\n\r\n                }).catch(function (err) {\r\n                    console.log(err)\r\n            });\r\n        },\r\n        logout ({commit}) {\r\n            commit('removeAuth');\r\n\r\n        },\r\n        fetchGraphData ({commit}, queryVal) {\r\n            let temp = [];\r\n            let tempData = [];\r\n\r\n            axios.get(baseURLLocal+'v1/max-lifts/?target_muscle='+queryVal.target_muscle +'&max_type='+ '3' +'&exercise_name='+queryVal.exercise_name).then(response => {\r\n\r\n                if (response.data.results.length === 0) {\r\n\r\n                    console.log(\"no results\");\r\n                    commit(\"setTargetedMuscleData\", null);\r\n                    commit(\"setGraphData\", null);\r\n                    commit(\"setGraphLabels\", null);\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0; i < response.data.results.length; i++) {\r\n                    temp[i] = moment(response.data.results[i].created).format(\"MMM Do YY\");\r\n                    tempData[i] = response.data.results[i].weight;\r\n                }\r\n\r\n\r\n                commit(\"setTargetedMuscleData\", response.data.results);\r\n                commit(\"setGraphData\", tempData);\r\n                commit(\"setGraphLabels\", temp);\r\n\r\n            }).catch(err =>  {\r\n                console.log(\"fetchGraphData store.js errors: \", err);\r\n            })\r\n        },\r\n\r\n    },\r\n    getters: {\r\n\r\n    }\r\n});"]}